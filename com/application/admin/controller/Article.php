<?php

namespace app\admin\controller;

use \app\common\model\Category;

class Article extends Common {
    protected $db;

    public function _initialize() {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->db = new \app\common\model\Article();
    }

    //文章列表
    public function index() {
        $title = input('param.title/s');
        $sort = input('param.sort/s');
        $order = input('param.order/s');
        $cid = input('param.cid/d');
        $where['is_del'] = 0;
        $where['title'] = $title;
        $where['cid'] = $cid;
        $pageParam['query']['title'] = $title;
        $pageParam['query']['cid'] = $cid;
        $pageParam['query']['sort'] = $sort;
        $pageParam['query']['order'] = $order;
        if ($sort) {
            $field = $this->db->getAll($where, $sort . ' ' . $order);
        } else {
            $field = $this->db->getAll($where);
        }
        $field = $field->paginate(8, false, $pageParam);
        $this->assign('field', $field);

        // 获取分类数据
        $cateData = (new Category())->getAll();
        $this->assign('cateData', $cateData);

        return $this->fetch();
    }

    // 列表排序
    public function sort() {
        if (request()->isPost()) {
            $title = input('post.title/s');
            $sort = input('post.sort/s');
            $order = input('post.order/s');
            $cid = input('post.cid/d');
            $where['is_del'] = 0;
            $where['title'] = $title;
            $where['cid'] = $cid;
            $pageParam['query']['title'] = $title;
            $pageParam['query']['cid'] = $cid;
            $pageParam['query']['sort'] = $sort;
            $pageParam['query']['order'] = $order;
            $pageParam['path'] = url('index');
            $list = $this->db->getAll($where, $sort . ' ' . $order);
            $list = $list->paginate(8, false, $pageParam);
            $page = $list->render();
            return ['html' => $this->fetch('list', ['field' => $list]), 'page' => $page];
        }
    }

    //添加文章
    public function store() {
        if (request()->isPost()) {
            $res = $this->db->store(input('post.'));
            if ($res['valid']) {
                $this->success($res['msg'], 'index');
                exit;
            } else {
                $this->error($res['msg']);
                exit;
            }
        }
        // 获取分类数据
        $cateData = (new Category())->getAll();
        $this->assign('cateData', $cateData);

        return $this->fetch();
    }

    // 删除到回收站
    public function delToRecycle() {
        $id = input('param.id');
        if ($this->db->save(['is_del' => 1], ['id' => $id])) {
            $this->success('操作成功', 'index');
            exit;
        } else {
            $this->error('操作失败');
            exit;
        }
    }

    // 放回文章列表（移出回收站）
    public function outToRecycle() {
        $id = input('param.id');
        if ($this->db->save(['is_del' => 0, 'del_time' => time()], ['id' => $id])) {
            $this->success('操作成功', 'recycle');
            exit;
        } else {
            $this->error('操作失败');
            exit;
        }
    }

    // 编辑
    public function edit() {
        if (request()->isPost()) {
            $res = $this->db->edit(input('post.'));
            if ($res['valid']) {
                $this->success($res['msg']);
                exit;
            } else {
                $this->error($res['msg']);
                exit;
            }
        }
        $id = input('param.id/d');

        // 1、获取分类数据
        $cateData = (new Category())->getAll();
        $this->assign('cateData', $cateData);

        // 2、获取文章信息
        $oldData = $this->db->find($id);
        $oldData['content'] = stripslashes($oldData['content']);
        $this->assign('oldData', $oldData);

        return $this->fetch();
    }

    // 回收站列表
    public function recycle() {
        $field = $this->db->getRecycleAll();
        $this->assign('field', $field);
        return $this->fetch();
    }

    // 回收站文章查看
    public function recycleEdit() {
        if (request()->isPost()) {
            $res = $this->db->edit(input('post.'));
            if ($res['valid']) {
                $this->success($res['msg']);
                exit;
            } else {
                $this->error($res['msg']);
                exit;
            }
        }
        $id = input('param.id/d');

        // 1、获取分类数据
        $cateData = (new Category())->getAll();
        $this->assign('cateData', $cateData);

        // 2、获取文章信息
        $oldData = $this->db->find($id);
        $oldData['content'] = stripslashes($oldData['content']);
        $this->assign('oldData', $oldData);

        return $this->fetch();
    }

    // 删除文章
    public function del() {
        $res = $this->db->del(input('post.id/d'));
        if ($res['valid']) {
            $this->success($res['msg'], 'recycle');
            exit;
        } else {
            $this->error($res['msg']);
            exit;
        }
    }
}
